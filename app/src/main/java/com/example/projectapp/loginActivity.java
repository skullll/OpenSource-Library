package com.example.projectapp;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import android.app.ProgressDialog;import android.content.Intent;import android.os.Bundle;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.auth.api.Auth;import com.google.android.gms.auth.api.signin.GoogleSignInAccount;import com.google.android.gms.auth.api.signin.GoogleSignInOptions;import com.google.android.gms.auth.api.signin.GoogleSignInResult;import com.google.android.gms.common.ConnectionResult;import com.google.android.gms.common.api.ApiException;import com.google.android.gms.common.api.GoogleApiClient;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.AuthCredential;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.auth.GoogleAuthProvider;public class loginActivity extends AppCompatActivity {    private Button LoginButton;    private EditText UserEmail, UserPassword;    private TextView NeedNewAccountLink, ForgetPasswordLink;    private ProgressDialog loadingBar;    private ImageView GoogleSignIn;    private FirebaseAuth mAuth;    private Boolean EmailAddressChecker;    private static final int RC_SIGN_IN =1;    private GoogleApiClient mGoogleSignInClient;    private static final String TAG = "LoginActiviy";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_login);        mAuth = FirebaseAuth.getInstance();        NeedNewAccountLink = (TextView) findViewById(R.id.register_account_link);        UserEmail = (EditText) findViewById(R.id.login_email);        UserPassword = (EditText) findViewById(R.id.login_password);        LoginButton = (Button) findViewById(R.id.login_button);        ForgetPasswordLink = (TextView) findViewById(R.id.forgot_password_link);        GoogleSignIn = (ImageView) findViewById(R.id.google_signin_button);        loadingBar = new ProgressDialog(this);        NeedNewAccountLink.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                SendUserToRegisterActivity();            }        });        ForgetPasswordLink.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                startActivity(new Intent(loginActivity.this,ResetPasswordActivity.class));            }        });        LoginButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                AllowingUserToLogin();            }        });        // Configure Google Sign In        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)                .requestIdToken(getString(R.string.default_web_client_id))                .requestEmail()                .build();        mGoogleSignInClient = new GoogleApiClient.Builder(this)                .enableAutoManage(this, new GoogleApiClient.OnConnectionFailedListener() {                    @Override                    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {                        Toast.makeText(loginActivity.this,"connection to google sign in failed...",Toast.LENGTH_LONG).show();                    }                })                .addApi(Auth.GOOGLE_SIGN_IN_API,gso)                .build();        GoogleSignIn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                signIn();            }        });        }    private void signIn() {        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleSignInClient);        startActivityForResult(signInIntent, RC_SIGN_IN);    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == RC_SIGN_IN) {            loadingBar.setTitle("Google sign in");            loadingBar.setMessage("please wait,........");            loadingBar.setCanceledOnTouchOutside(true);            loadingBar.show();            GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);            if(result.isSuccess())            {                GoogleSignInAccount account = result.getSignInAccount();                firebaseAuthWithGoogle(account);                Toast.makeText(this,"please wait,while we get result",Toast.LENGTH_SHORT).show();            }            else            {                Toast.makeText(this,"can't get Auth result",Toast.LENGTH_SHORT).show();                loadingBar.dismiss();            }        }    }    private void firebaseAuthWithGoogle(GoogleSignInAccount acct) {        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);        mAuth.signInWithCredential(credential)                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {                    @Override                    public void onComplete(@NonNull Task<AuthResult> task) {                        if (task.isSuccessful()) {                            Log.d(TAG, "signInWithCredential:success");                            SendUserToMainActivity();                            loadingBar.dismiss();                        } else {                            Log.w(TAG, "signInWithCredential:failure", task.getException());                            String msg = task.getException().toString();                            SendUsertoLogin();                            Toast.makeText(loginActivity.this,"not authenticated, try again.."+msg,Toast.LENGTH_SHORT).show();                            loadingBar.dismiss();                        }                    }                });    }    private void AllowingUserToLogin() {        String email = UserEmail.getText().toString();        String password = UserPassword.getText().toString();        if(TextUtils.isEmpty(email))        {            Toast.makeText(this,"please,type your email...",Toast.LENGTH_SHORT).show();        }        else if(TextUtils.isEmpty(password))        {            Toast.makeText(this,"please type your password...",Toast.LENGTH_SHORT).show();        }        else        {            loadingBar.setTitle("Login");            loadingBar.setMessage("please wait, while we are Login to your account...");            loadingBar.show();            loadingBar.setCanceledOnTouchOutside(true);            mAuth.signInWithEmailAndPassword(email,password)                    .addOnCompleteListener(new OnCompleteListener<AuthResult>() {                        @Override                        public void onComplete(@NonNull Task<AuthResult> task) {                            if(task.isSuccessful())                            {                                VerifyEmailAddress();                                loadingBar.dismiss();                            }                            else                            {                                String message = task.getException().getMessage();                                Toast.makeText(loginActivity.this,"Error Ocurred:" + message,Toast.LENGTH_SHORT).show();                                loadingBar.dismiss();                            }                        }                    });        }    }    private void VerifyEmailAddress()    {        FirebaseUser user = mAuth.getCurrentUser();        EmailAddressChecker = user.isEmailVerified();        if(EmailAddressChecker)        {            SendUserToMainActivity();        }        else        {            Toast.makeText(this,"please, verify your accoount first....",Toast.LENGTH_LONG).show();            mAuth.signOut();        }    }    private void SendUserToMainActivity() {        Intent mainIntent = new Intent(loginActivity.this, MainActivity.class);        mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);        startActivity(mainIntent);        finish();    }    private void SendUsertoLogin() {        Intent mainIntent = new Intent(loginActivity.this, loginActivity.class);        mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);        startActivity(mainIntent);        finish();    }    private void SendUserToRegisterActivity() {        Intent registerIntent = new Intent(loginActivity.this,RegisterActivity.class);        startActivity(registerIntent);    }}